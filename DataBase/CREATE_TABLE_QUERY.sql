-- 테이블 순서는 관계를 고려하여 한 번에 실행해도 에러가 발생하지 않게 정렬되었습니다.

-- LI_INFO Table Create SQL
-- 테이블 생성 SQL - LI_INFO
CREATE TABLE LI_INFO
(
    `LI_IDX`   INT            NOT NULL    AUTO_INCREMENT COMMENT '자격증 인덱스', 
    `LI_NAME`  VARCHAR(50)    NOT NULL    COMMENT '자격증 이름', 
    `LI_TYPE`  CHAR(1)        NOT NULL    COMMENT '자격증 타입(필기: 0, 실기: 1)', 
     PRIMARY KEY (LI_IDX)
);

-- 테이블 Comment 설정 SQL - LI_INFO
ALTER TABLE LI_INFO COMMENT '자격증 정보가 담긴 테이블 (LI: License). 여러 자격증 정보가 담긴 테이블';


-- PLAN_INFO Table Create SQL
-- 테이블 생성 SQL - PLAN_INFO
CREATE TABLE PLAN_INFO
(
    `PLAN_IDX`   INT        NOT NULL    AUTO_INCREMENT COMMENT '플랜 인덱스', 
    `LI_IDX`     INT        NOT NULL    COMMENT '자격증 인덱스', 
    `PLAN_TYPE`  CHAR(1)    NOT NULL    COMMENT '플랜 타입(0:선택형, 1:필수형)', 
     PRIMARY KEY (PLAN_IDX)
);

-- 테이블 Comment 설정 SQL - PLAN_INFO
ALTER TABLE PLAN_INFO COMMENT '플랜 정보가 담긴 테이블';

-- Foreign Key 설정 SQL - PLAN_INFO(LI_IDX) -> LI_INFO(LI_IDX)
ALTER TABLE PLAN_INFO
    ADD CONSTRAINT FK_PLAN_INFO_LI_IDX_LI_INFO_LI_IDX FOREIGN KEY (LI_IDX)
        REFERENCES LI_INFO (LI_IDX) ON DELETE RESTRICT ON UPDATE RESTRICT;

-- Foreign Key 삭제 SQL - PLAN_INFO(LI_IDX)
-- ALTER TABLE PLAN_INFO
-- DROP FOREIGN KEY FK_PLAN_INFO_LI_IDX_LI_INFO_LI_IDX;


-- USER_INFO Table Create SQL
-- 테이블 생성 SQL - USER_INFO
CREATE TABLE USER_INFO
(
    `USER_IDX`    INT             NOT NULL    AUTO_INCREMENT COMMENT '회원 인덱스', 
    `USER_ID`     VARCHAR(50)     NOT NULL    COMMENT '회원 아이디', 
    `USER_PW`     VARCHAR(255)    NOT NULL    COMMENT '회원 비밀번호', 
    `USER_NAME`   VARCHAR(50)     NOT NULL    COMMENT '회원 이름(카카오톡 아이디).', 
    `USER_PRO`    BLOB            NOT NULL    COMMENT '회원 프로필(카카오톡 프로필)', 
    `USER_POINT`  INT             NOT NULL    COMMENT '회원 포인트', 
    `JOINED_AT`   DATETIME        NOT NULL    COMMENT '회원가입 날짜', 
     PRIMARY KEY (USER_IDX)
);

-- 테이블 Comment 설정 SQL - USER_INFO
ALTER TABLE USER_INFO COMMENT '회원 정보가 담긴 테이블';


-- EX_INFO Table Create SQL
-- 테이블 생성 SQL - EX_INFO
CREATE TABLE EX_INFO
(
    `EX_IDX`    INT         NOT NULL    AUTO_INCREMENT COMMENT '시험 인덱스', 
    `LI_IDX`    INT         NOT NULL    COMMENT '자격증 인덱스', 
    `APP_STD`   DATETIME    NOT NULL    COMMENT '원서 접수 시작일(APP: Apply)', 
    `AP_ED`     DATETIME    NOT NULL    COMMENT '원서 접수 마감일', 
    `EX_STD`    DATETIME    NOT NULL    COMMENT '시험 시작일', 
    `EX_ED`     DATETIME    NOT NULL    COMMENT '시험 종료 일', 
    `EX_ROUND`  INT         NOT NULL    COMMENT '시험 회차(보통 1, 2, 3)', 
    `EX_RD`     DATETIME    NOT NULL    COMMENT '합격자 발표일(RD: Result Date)', 
     PRIMARY KEY (EX_IDX)
);

-- 테이블 Comment 설정 SQL - EX_INFO
ALTER TABLE EX_INFO COMMENT '시험 정보가 담긴 테이블. 시험 회차 정보가 담기 테이블';

-- Foreign Key 설정 SQL - EX_INFO(LI_IDX) -> LI_INFO(LI_IDX)
ALTER TABLE EX_INFO
    ADD CONSTRAINT FK_EX_INFO_LI_IDX_LI_INFO_LI_IDX FOREIGN KEY (LI_IDX)
        REFERENCES LI_INFO (LI_IDX) ON DELETE RESTRICT ON UPDATE RESTRICT;

-- Foreign Key 삭제 SQL - EX_INFO(LI_IDX)
-- ALTER TABLE EX_INFO
-- DROP FOREIGN KEY FK_EX_INFO_LI_IDX_LI_INFO_LI_IDX;


-- TOPIC_INFO Table Create SQL
-- 테이블 생성 SQL - TOPIC_INFO
CREATE TABLE TOPIC_INFO
(
    `TOPIC_IDX`   INT             NOT NULL    AUTO_INCREMENT COMMENT '문제 주제 인덱스', 
    `LI_IDX`      INT             NOT NULL    COMMENT '자격증 인덱스', 
    `TOPIC_NUM`   INT             NOT NULL    COMMENT '자격증 내 주제 번호', 
    `TOPIC_NAME`  VARCHAR(255)    NOT NULL    COMMENT '주제 이름', 
     PRIMARY KEY (TOPIC_IDX)
);

-- 테이블 Comment 설정 SQL - TOPIC_INFO
ALTER TABLE TOPIC_INFO COMMENT '주제 정보가 담긴 테이블. 자격증 주제 정보가 담긴 테이블';

-- Foreign Key 설정 SQL - TOPIC_INFO(LI_IDX) -> LI_INFO(LI_IDX)
ALTER TABLE TOPIC_INFO
    ADD CONSTRAINT FK_TOPIC_INFO_LI_IDX_LI_INFO_LI_IDX FOREIGN KEY (LI_IDX)
        REFERENCES LI_INFO (LI_IDX) ON DELETE RESTRICT ON UPDATE RESTRICT;

-- Foreign Key 삭제 SQL - TOPIC_INFO(LI_IDX)
-- ALTER TABLE TOPIC_INFO
-- DROP FOREIGN KEY FK_TOPIC_INFO_LI_IDX_LI_INFO_LI_IDX;


-- PAY_INFO Table Create SQL
-- 테이블 생성 SQL - PAY_INFO
CREATE TABLE PAY_INFO
(
    `PAY_IDX`   INT         NOT NULL    AUTO_INCREMENT COMMENT '결재 인덱스', 
    `USER_IDX`  INT         NOT NULL    COMMENT '회원 인덱스', 
    `PLAN_IDX`  INT         NOT NULL    COMMENT '플랜 인덱스', 
    `PLAN_STD`  DATETIME    NOT NULL    COMMENT '플랜 시작일(Start Date)', 
    `PLAN_ED`   DATETIME    NOT NULL    COMMENT '플랜 마감일(End Date)', 
     PRIMARY KEY (PAY_IDX)
);

-- 테이블 Comment 설정 SQL - PAY_INFO
ALTER TABLE PAY_INFO COMMENT '결재 정보가 담긴 테이블. 결재 정보가 담긴 테이블';

-- Foreign Key 설정 SQL - PAY_INFO(PLAN_IDX) -> PLAN_INFO(PLAN_IDX)
ALTER TABLE PAY_INFO
    ADD CONSTRAINT FK_PAY_INFO_PLAN_IDX_PLAN_INFO_PLAN_IDX FOREIGN KEY (PLAN_IDX)
        REFERENCES PLAN_INFO (PLAN_IDX) ON DELETE RESTRICT ON UPDATE RESTRICT;

-- Foreign Key 삭제 SQL - PAY_INFO(PLAN_IDX)
-- ALTER TABLE PAY_INFO
-- DROP FOREIGN KEY FK_PAY_INFO_PLAN_IDX_PLAN_INFO_PLAN_IDX;

-- Foreign Key 설정 SQL - PAY_INFO(USER_IDX) -> USER_INFO(USER_IDX)
ALTER TABLE PAY_INFO
    ADD CONSTRAINT FK_PAY_INFO_USER_IDX_USER_INFO_USER_IDX FOREIGN KEY (USER_IDX)
        REFERENCES USER_INFO (USER_IDX) ON DELETE RESTRICT ON UPDATE RESTRICT;

-- Foreign Key 삭제 SQL - PAY_INFO(USER_IDX)
-- ALTER TABLE PAY_INFO
-- DROP FOREIGN KEY FK_PAY_INFO_USER_IDX_USER_INFO_USER_IDX;


-- PB_INFO Table Create SQL
-- 테이블 생성 SQL - PB_INFO
CREATE TABLE PB_INFO
(
    `PB_IDX`     INT              NOT NULL    AUTO_INCREMENT COMMENT '문제 인덱스', 
    `LI_IDX`     INT              NOT NULL    COMMENT '자격증 인덱스', 
    `EX_IDX`     INT              NOT NULL    COMMENT '시험 인덱스', 
    `PB_NUM`     INT              NOT NULL    COMMENT '한 회차 내의 문제 번호', 
    `PB_QUES`    VARCHAR(255)     NOT NULL    COMMENT '문제 질문', 
    `PB_DETAIL`  VARCHAR(255)     NULL        COMMENT '문제 세부 설명 사진 경로(.gif).', 
    `PB_CHOI1`   VARCHAR(255)     NOT NULL    COMMENT '문제 1번 선지', 
    `PB_CHOI2`   VARCHAR(255)     NOT NULL    COMMENT '문제 2번 선지', 
    `PB_CHOI3`   VARCHAR(255)     NOT NULL    COMMENT '문제 3번 선지', 
    `PB_CHOI4`   VARCHAR(255)     NOT NULL    COMMENT '문제 4번 선지', 
    `PB_ANS`     INT              NOT NULL    COMMENT '문제 정답 번호', 
    `PB_SOLU`    VARCHAR(1000)    NOT NULL    COMMENT '문제 해설', 
    `PB_CR`      INT              NOT NULL    COMMENT '문제 정답률', 
    `TOPIC_IDX`  INT              NOT NULL    COMMENT '문제 주제 인덱스', 
     PRIMARY KEY (PB_IDX)
);

-- 테이블 Comment 설정 SQL - PB_INFO
ALTER TABLE PB_INFO COMMENT '문제 정보가 담긴 테이블. 시험 문제 정보가 담긴 테이블';

-- Foreign Key 설정 SQL - PB_INFO(LI_IDX) -> LI_INFO(LI_IDX)
ALTER TABLE PB_INFO
    ADD CONSTRAINT FK_PB_INFO_LI_IDX_LI_INFO_LI_IDX FOREIGN KEY (LI_IDX)
        REFERENCES LI_INFO (LI_IDX) ON DELETE RESTRICT ON UPDATE RESTRICT;

-- Foreign Key 삭제 SQL - PB_INFO(LI_IDX)
-- ALTER TABLE PB_INFO
-- DROP FOREIGN KEY FK_PB_INFO_LI_IDX_LI_INFO_LI_IDX;

-- Foreign Key 설정 SQL - PB_INFO(TOPIC_IDX) -> TOPIC_INFO(TOPIC_IDX)
ALTER TABLE PB_INFO
    ADD CONSTRAINT FK_PB_INFO_TOPIC_IDX_TOPIC_INFO_TOPIC_IDX FOREIGN KEY (TOPIC_IDX)
        REFERENCES TOPIC_INFO (TOPIC_IDX) ON DELETE RESTRICT ON UPDATE RESTRICT;

-- Foreign Key 삭제 SQL - PB_INFO(TOPIC_IDX)
-- ALTER TABLE PB_INFO
-- DROP FOREIGN KEY FK_PB_INFO_TOPIC_IDX_TOPIC_INFO_TOPIC_IDX;

-- Foreign Key 설정 SQL - PB_INFO(EX_IDX) -> EX_INFO(EX_IDX)
ALTER TABLE PB_INFO
    ADD CONSTRAINT FK_PB_INFO_EX_IDX_EX_INFO_EX_IDX FOREIGN KEY (EX_IDX)
        REFERENCES EX_INFO (EX_IDX) ON DELETE RESTRICT ON UPDATE RESTRICT;

-- Foreign Key 삭제 SQL - PB_INFO(EX_IDX)
-- ALTER TABLE PB_INFO
-- DROP FOREIGN KEY FK_PB_INFO_EX_IDX_EX_INFO_EX_IDX;


-- TMP Table Create SQL
-- 테이블 생성 SQL - TMP
CREATE TABLE TMP
(
    `TMP`  INT    NOT NULL    COMMENT '임시. 주제 아이디. 시험 아이디', 
     PRIMARY KEY (TMP)
);

-- 테이블 Comment 설정 SQL - TMP
ALTER TABLE TMP COMMENT '임시 테이블';
DROP TABLE TMP;

-- REFUND_INFO Table Create SQL
-- 테이블 생성 SQL - REFUND_INFO
CREATE TABLE REFUND_INFO
(
    `RF_IDX`     INT             NOT NULL    AUTO_INCREMENT COMMENT '환불 인덱스', 
    `PAY_IDX`    INT             NOT NULL    COMMENT '결재 인덱스', 
    `USER_IDX`   INT             NOT NULL    COMMENT '회원 인덱스', 
    `RF_VPATH`   VARCHAR(255)    NOT NULL    COMMENT '합격 인증 영상 경로(Video Path)', 
    `RF_NAME`    VARCHAR(50)     NOT NULL    COMMENT '환불 예금주', 
    `RF_BANK`    VARCHAR(50)     NOT NULL    COMMENT '환불 은행', 
    `RF_ACCNUM`  VARCHAR(50)     NOT NULL    COMMENT '환불 계좌번호(Account Number)', 
     PRIMARY KEY (RF_IDX)
);

-- 테이블 Comment 설정 SQL - REFUND_INFO
ALTER TABLE REFUND_INFO COMMENT '환급 신청 정보가 담긴 테이블';

-- Foreign Key 설정 SQL - REFUND_INFO(PAY_IDX) -> PAY_INFO(PAY_IDX)
ALTER TABLE REFUND_INFO
    ADD CONSTRAINT FK_REFUND_INFO_PAY_IDX_PAY_INFO_PAY_IDX FOREIGN KEY (PAY_IDX)
        REFERENCES PAY_INFO (PAY_IDX) ON DELETE RESTRICT ON UPDATE RESTRICT;

-- Foreign Key 삭제 SQL - REFUND_INFO(PAY_IDX)
-- ALTER TABLE REFUND_INFO
-- DROP FOREIGN KEY FK_REFUND_INFO_PAY_IDX_PAY_INFO_PAY_IDX;

-- Foreign Key 설정 SQL - REFUND_INFO(USER_IDX) -> USER_INFO(USER_IDX)
ALTER TABLE REFUND_INFO
    ADD CONSTRAINT FK_REFUND_INFO_USER_IDX_USER_INFO_USER_IDX FOREIGN KEY (USER_IDX)
        REFERENCES USER_INFO (USER_IDX) ON DELETE RESTRICT ON UPDATE RESTRICT;

-- Foreign Key 삭제 SQL - REFUND_INFO(USER_IDX)
-- ALTER TABLE REFUND_INFO
-- DROP FOREIGN KEY FK_REFUND_INFO_USER_IDX_USER_INFO_USER_IDX;


-- ATD_LOG Table Create SQL
-- 테이블 생성 SQL - ATD_LOG
CREATE TABLE ATD_LOG
(
    `ATD_IDX`   INT         NOT NULL    AUTO_INCREMENT COMMENT '출석 인덱스', 
    `USER_IDX`  INT         NOT NULL    COMMENT '회원 인덱스', 
    `ATD_AT`    DATETIME    NOT NULL    COMMENT '출석 날짜', 
     PRIMARY KEY (ATD_IDX)
);

-- 테이블 Comment 설정 SQL - ATD_LOG
ALTER TABLE ATD_LOG COMMENT '출석 정보가 담긴 테이블(ATD = Attendance). 출석 정보가 담긴 테이블';

-- Foreign Key 설정 SQL - ATD_LOG(USER_IDX) -> USER_INFO(USER_IDX)
ALTER TABLE ATD_LOG
    ADD CONSTRAINT FK_ATD_LOG_USER_IDX_USER_INFO_USER_IDX FOREIGN KEY (USER_IDX)
        REFERENCES USER_INFO (USER_IDX) ON DELETE RESTRICT ON UPDATE RESTRICT;

-- Foreign Key 삭제 SQL - ATD_LOG(USER_IDX)
-- ALTER TABLE ATD_LOG
-- DROP FOREIGN KEY FK_ATD_LOG_USER_IDX_USER_INFO_USER_IDX;


-- PBS_LOG Table Create SQL
-- 테이블 생성 SQL - PBS_LOG
CREATE TABLE PBS_LOG
(
    `PBS_IDX`    INT         NOT NULL    AUTO_INCREMENT COMMENT '문제 풀이 로그 인덱스', 
    `USER_IDX`   INT         NOT NULL    COMMENT '회원 인덱스', 
    `PB_IDX`     INT         NOT NULL    COMMENT '문제 인덱스', 
    `PBS_CHECK`  CHAR(1)     NOT NULL    COMMENT '문제 정답 여부(0: 틀림, 1: 맞음)', 
    `PBS_AT`     DATETIME    NOT NULL    COMMENT '문제 푼 날짜', 
     PRIMARY KEY (PBS_IDX)
);

-- 테이블 Comment 설정 SQL - PBS_LOG
ALTER TABLE PBS_LOG COMMENT '사용자가 문제를 풀었을 때 문제 푼 정보가 저장되는 테이블(PBS = Problem Solve). 문제를 풀었던 정보가 담기 테이블';

-- Foreign Key 설정 SQL - PBS_LOG(PB_IDX) -> PB_INFO(PB_IDX)
ALTER TABLE PBS_LOG
    ADD CONSTRAINT FK_PBS_LOG_PB_IDX_PB_INFO_PB_IDX FOREIGN KEY (PB_IDX)
        REFERENCES PB_INFO (PB_IDX) ON DELETE RESTRICT ON UPDATE RESTRICT;

-- Foreign Key 삭제 SQL - PBS_LOG(PB_IDX)
-- ALTER TABLE PBS_LOG
-- DROP FOREIGN KEY FK_PBS_LOG_PB_IDX_PB_INFO_PB_IDX;

-- Foreign Key 설정 SQL - PBS_LOG(USER_IDX) -> USER_INFO(USER_IDX)
ALTER TABLE PBS_LOG
    ADD CONSTRAINT FK_PBS_LOG_USER_IDX_USER_INFO_USER_IDX FOREIGN KEY (USER_IDX)
        REFERENCES USER_INFO (USER_IDX) ON DELETE RESTRICT ON UPDATE RESTRICT;

-- Foreign Key 삭제 SQL - PBS_LOG(USER_IDX)
-- ALTER TABLE PBS_LOG
-- DROP FOREIGN KEY FK_PBS_LOG_USER_IDX_USER_INFO_USER_IDX;


